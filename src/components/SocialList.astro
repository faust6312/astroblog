---
import { Icon } from "astro-icon/components";

interface SocialLink {
    friendlyName: string;
    isWebmention?: boolean;
    link: string;
    name: string;
    type?: 'social' | 'friend';
}

// 社交链接数据
const socialLinks: SocialLink[] = [
    {
        friendlyName: "Github",
        link: "https://github.com/faust6312",
        name: "mdi:github",
        type: 'social'
    },
    {
        friendlyName: "Bilibili",
        link: "https://space.bilibili.com/237593169",
        name: "bilibili",
        type: 'social'
    },
    {
        friendlyName: "Nodeseek",
        link: "https://www.nodeseek.com/space/24280",
        name: "nodeseek",
        type: 'social'
    },
    {
        friendlyName: "linux.do",
        link: "https://linux.do/u/faust6312",
        name: "linux.do",
        type: 'social'
    },
    {
        friendlyName: "wyy",
        link: "https://music.163.com/#/user/home?id=449873508",
        name: "wyy",
        type: 'social'
    }
];

// 友情链接数据
const friendLinks: SocialLink[] = [
    {
        friendlyName: "f6",
        link: "https://blog.shiyaa.me/",
        name: "f6",
        type: 'friend'
    },
    {
        friendlyName: "f5",
        link: "https://blog.noospic.me/",
        name: "f5",
        type: 'friend'
    },
    {
        friendlyName: "f4",
        link: "https://blog.wrihope.top/",
        name: "f4",
        type: 'friend'
    },
    {
        friendlyName: "f3",
        link: "https://asmrbro.com",
        name: "f3",
        type: 'friend'
    },
    {
        friendlyName: "f2",
        link: "https://blog.keepchen.com",
        name: "f2",
        type: 'friend'
    },
    {
        friendlyName: "f1",
        link: "https://www.cloudofficial.top",
        name: "f1",
        type: 'friend'
    },
    {
        friendlyName: "typecho",
        link: "https://type.700050.xyz/",
        name: "typecho",
        type: 'friend'
    },
    {
        friendlyName: "cnblog",
        link: "https://www.cnblogs.com/faust6312",
        name: "logo",
        type: 'friend'
    }
];

// 预加载关键SVG图标
const preloadIcons = () => {
    // 这里可以添加最常用的图标名称
    const criticalIcons = ['mdi:github', 'bilibili'];
    
    return `
        <link 
            rel="preload" 
            href="/icons/mdi:github.svg" 
            as="image" 
            type="image/svg+xml"
        />
        <link 
            rel="preload" 
            href="/icons/bilibili.svg" 
            as="image" 
            type="image/svg+xml"
        />
    `;
};

// 优化图标加载的客户端脚本
const optimizeScript = `
// 使用Intersection Observer API实现图标的延迟加载
document.addEventListener('DOMContentLoaded', () => {
    const lazyIcons = document.querySelectorAll('.lazy-load-icon');
    
    if ('IntersectionObserver' in window) {
        const iconObserver = new IntersectionObserver((entries, observer) => {
            entries.forEach(entry => {
                if (entry.isIntersecting) {
                    const icon = entry.target;
                    const iconName = icon.getAttribute('data-icon');
                    
                    if (iconName) {
                        // 替换占位符为实际图标
                        const actualIcon = document.createElement('div');
                        actualIcon.classList.add('icon-wrapper');
                        actualIcon.innerHTML = \`<svg><use href="#\${iconName}"></use></svg>\`;
                        icon.parentNode.replaceChild(actualIcon, icon);
                    }
                    
                    // 停止观察已加载的图标
                    observer.unobserve(icon);
                }
            });
        }, {
            rootMargin: '100px', // 提前100px开始加载
            threshold: 0.1
        });
        
        // 开始观察所有懒加载图标
        lazyIcons.forEach(icon => {
            iconObserver.observe(icon);
        });
    } else {
        // 对于不支持IntersectionObserver的浏览器，直接加载所有图标
        lazyIcons.forEach(icon => {
            const iconName = icon.getAttribute('data-icon');
            if (iconName) {
                const actualIcon = document.createElement('div');
                actualIcon.classList.add('icon-wrapper');
                actualIcon.innerHTML = \`<svg><use href="#\${iconName}"></use></svg>\`;
                icon.parentNode.replaceChild(actualIcon, icon);
            }
        });
    }
    
    // 优化SVG渲染
    document.querySelectorAll('svg').forEach(svg => {
        svg.setAttribute('width', '24');
        svg.setAttribute('height', '24');
    });
});
`;
---

<!-- 预加载关键SVG图标 -->
<Fragment set:html={preloadIcons()} />

<div class="mt-8 flex min-h-[64px] flex-col gap-y-4">
    <!-- 社交链接 - 直接加载 -->
    <div class="flex flex-wrap items-end justify-end gap-x-2 text-right">
        <ul class="flex flex-1 items-center gap-x-2 sm:flex-initial">
            {socialLinks.map(({ friendlyName, isWebmention, link, name }) => (
                <li class="h-8 w-8 flex items-center justify-center">
                    <a
                        class="inline-flex h-full w-full items-center justify-center sm:hover:text-link"
                        href={link}
                        rel={`noreferrer ${isWebmention ? "me authn" : ""}`}
                        target="_blank"
                    >
                        <Icon 
                            aria-hidden="true" 
                            class="h-full w-full" 
                            focusable="false" 
                            name={name}
                            width="24" 
                            height="24"
                            loading="eager"
                        />
                        <span class="sr-only">{friendlyName}</span>
                    </a>
                </li>
            ))}
        </ul>
    </div>

    <!-- 懒加载 -->
    {friendLinks.length > 0 && (
        <div class="flex flex-wrap items-end justify-end gap-x-2 text-right">
            <p class="w-full text-right font-bold text-gray-600">Friend Links</p>
            <ul class="flex flex-1 flex-wrap items-center gap-x-2 sm:flex-initial">
                {friendLinks.map(({ friendlyName, isWebmention, link, name }, index) => (
                    <li class="h-8 w-8 flex items-center justify-center">
                        <a
                            class="inline-flex h-full w-full items-center justify-center sm:hover:text-link"
                            href={link}
                            rel={`noreferrer ${isWebmention ? "me authn" : ""}`}
                            target="_blank"
                        >
                            {/* 前两个友链使用常规加载，其余使用懒加载 */}
                            {index < 2 ? (
                                <Icon 
                                    aria-hidden="true" 
                                    class="h-full w-full" 
                                    focusable="false" 
                                    name={name}
                                    width="24" 
                                    height="24"
                                    loading="lazy"
                                />
                            ) : (
                                <div 
                                    class="lazy-load-icon h-full w-full" 
                                    data-icon={name}
                                    aria-hidden="true"
                                >
                                    <!-- 占位符，稍后由JavaScript替换 -->
                                    <svg width="24" height="24" viewBox="0 0 24 24">
                                        <rect width="24" height="24" fill="transparent" />
                                    </svg>
                                </div>
                            )}
                            <span class="sr-only">{friendlyName}</span>
                        </a>
                    </li>
                ))}
            </ul>
        </div>
    )}
</div>


<script set:html={optimizeScript}></script>

<style>

    .icon-wrapper svg {
        width: 100%;
        height: 100%;
    }
    

    .lazy-load-icon {
        min-width: 24px;
        min-height: 24px;
        display: flex;
        align-items: center;
        justify-content: center;
    }
</style>
